use ordnl;

#[test]
pub fn test_u64() {
    for (num, expected) in vec![
        // < 100
        (0u64, "0th"),
        (1u64, "1st"),
        (2u64, "2nd"),
        (3u64, "3rd"),
        (4u64, "4th"),
        (5u64, "5th"),
        (6u64, "6th"),
        (7u64, "7th"),
        (8u64, "8th"),
        (9u64, "9th"),
        (10u64, "10th"),
        (11u64, "11th"),
        (12u64, "12th"),
        (13u64, "13th"),
        (14u64, "14th"),
        (15u64, "15th"),
        (16u64, "16th"),
        (17u64, "17th"),
        (18u64, "18th"),
        (19u64, "19th"),
        (20u64, "20th"),
        (21u64, "21st"),
        (22u64, "22nd"),
        (23u64, "23rd"),
        (24u64, "24th"),
        (25u64, "25th"),
        (26u64, "26th"),
        (27u64, "27th"),
        (28u64, "28th"),
        (29u64, "29th"),
        // 100+
        (100u64, "100th"),
        (101u64, "101st"),
        (102u64, "102nd"),
        (103u64, "103rd"),
        (104u64, "104th"),
        (105u64, "105th"),
        (106u64, "106th"),
        (107u64, "107th"),
        (108u64, "108th"),
        (109u64, "109th"),
        (111u64, "111th"),
        (112u64, "112th"),
        (113u64, "113th"),
        (114u64, "114th"),
        (115u64, "115th"),
        (116u64, "116th"),
        (117u64, "117th"),
        (118u64, "118th"),
        (119u64, "119th"),
        (200u64, "200th"),
        (211u64, "211th"),
        (212u64, "212th"),
        (213u64, "213th"),
        (214u64, "214th"),
        (215u64, "215th"),
        (216u64, "216th"),
        (217u64, "217th"),
        (218u64, "218th"),
        (219u64, "219th"),
        // 1000+
        (1000u64, "1000th"),
        (1001u64, "1001st"),
        (1002u64, "1002nd"),
        (1003u64, "1003rd"),
        (1004u64, "1004th"),
        (1005u64, "1005th"),
        (1006u64, "1006th"),
        (1007u64, "1007th"),
        (1008u64, "1008th"),
        (1009u64, "1009th"),
        (1011u64, "1011th"),
        (1012u64, "1012th"),
        (1013u64, "1013th"),
        (1014u64, "1014th"),
        (1015u64, "1015th"),
        (1016u64, "1016th"),
        (1017u64, "1017th"),
        (1018u64, "1018th"),
        (1019u64, "1019th"),
        (1100u64, "1100th"),
        (1101u64, "1101st"),
        (1102u64, "1102nd"),
        (1103u64, "1103rd"),
        (1104u64, "1104th"),
        (1105u64, "1105th"),
        (1106u64, "1106th"),
        (1107u64, "1107th"),
        (1108u64, "1108th"),
        (1109u64, "1109th"),
        (1111u64, "1111th"),
        (1112u64, "1112th"),
        (1113u64, "1113th"),
        (1114u64, "1114th"),
        (1115u64, "1115th"),
        (1116u64, "1116th"),
        (1117u64, "1117th"),
        (1118u64, "1118th"),
        (1119u64, "1119th"),
        // 10,000+
        (10000u64, "10000th"),
        (10001u64, "10001st"),
        (10002u64, "10002nd"),
        (10003u64, "10003rd"),
        (10004u64, "10004th"),
        (10005u64, "10005th"),
        (10006u64, "10006th"),
        (10007u64, "10007th"),
        (10008u64, "10008th"),
        (10009u64, "10009th"),
        (10011u64, "10011th"),
        (10012u64, "10012th"),
        (10013u64, "10013th"),
        (10014u64, "10014th"),
        (10015u64, "10015th"),
        (10016u64, "10016th"),
        (10017u64, "10017th"),
        (10018u64, "10018th"),
        (10019u64, "10019th"),
        (10100u64, "10100th"),
        (10101u64, "10101st"),
        (10102u64, "10102nd"),
        (10103u64, "10103rd"),
        (10104u64, "10104th"),
        (10105u64, "10105th"),
        (10106u64, "10106th"),
        (10107u64, "10107th"),
        (10108u64, "10108th"),
        (10109u64, "10109th"),
        (10111u64, "10111th"),
        (10112u64, "10112th"),
        (10113u64, "10113th"),
        (10114u64, "10114th"),
        (10115u64, "10115th"),
        (10116u64, "10116th"),
        (10117u64, "10117th"),
        (10118u64, "10118th"),
        (10119u64, "10119th"),
        // 1,000,000,000+
        (1000000000u64, "1000000000th"),
        (1000000001u64, "1000000001st"),
        (1000000002u64, "1000000002nd"),
        (1000000003u64, "1000000003rd"),
        (1000000004u64, "1000000004th"),
        (1000000005u64, "1000000005th"),
        (1000000006u64, "1000000006th"),
        (1000000007u64, "1000000007th"),
        (1000000008u64, "1000000008th"),
        (1000000009u64, "1000000009th"),
        (1000000011u64, "1000000011th"),
        (1000000012u64, "1000000012th"),
        (1000000013u64, "1000000013th"),
        (1000000014u64, "1000000014th"),
        (1000000015u64, "1000000015th"),
        (1000000016u64, "1000000016th"),
        (1000000017u64, "1000000017th"),
        (1000000018u64, "1000000018th"),
        (1000000019u64, "1000000019th"),
        (1000000100u64, "1000000100th"),
        (1000000101u64, "1000000101st"),
        (1000000102u64, "1000000102nd"),
        (1000000103u64, "1000000103rd"),
        (1000000104u64, "1000000104th"),
        (1000000105u64, "1000000105th"),
        (1000000106u64, "1000000106th"),
        (1000000107u64, "1000000107th"),
        (1000000108u64, "1000000108th"),
        (1000000109u64, "1000000109th"),
        (1000000111u64, "1000000111th"),
        (1000000112u64, "1000000112th"),
        (1000000113u64, "1000000113th"),
        (1000000114u64, "1000000114th"),
        (1000000115u64, "1000000115th"),
        (1000000116u64, "1000000116th"),
        (1000000117u64, "1000000117th"),
        (1000000118u64, "1000000118th"),
        (1000000119u64, "1000000119th"),
        //  10,000,000,000,000,000,000
        (10000000000000000000u64, "10000000000000000000th"),
        (10000000000000000001u64, "10000000000000000001st"),
        (10000000000000000002u64, "10000000000000000002nd"),
        (10000000000000000003u64, "10000000000000000003rd"),
        (10000000000000000004u64, "10000000000000000004th"),
        (10000000000000000005u64, "10000000000000000005th"),
        (10000000000000000006u64, "10000000000000000006th"),
        (10000000000000000007u64, "10000000000000000007th"),
        (10000000000000000008u64, "10000000000000000008th"),
        (10000000000000000009u64, "10000000000000000009th"),
        (10000000000000000011u64, "10000000000000000011th"),
        (10000000000000000012u64, "10000000000000000012th"),
        (10000000000000000013u64, "10000000000000000013th"),
        (10000000000000000014u64, "10000000000000000014th"),
        (10000000000000000015u64, "10000000000000000015th"),
        (10000000000000000016u64, "10000000000000000016th"),
        (10000000000000000017u64, "10000000000000000017th"),
        (10000000000000000018u64, "10000000000000000018th"),
        (10000000000000000019u64, "10000000000000000019th"),
        (10000000000000000100u64, "10000000000000000100th"),
        (10000000000000000101u64, "10000000000000000101st"),
        (10000000000000000102u64, "10000000000000000102nd"),
        (10000000000000000103u64, "10000000000000000103rd"),
        (10000000000000000104u64, "10000000000000000104th"),
        (10000000000000000105u64, "10000000000000000105th"),
        (10000000000000000106u64, "10000000000000000106th"),
        (10000000000000000107u64, "10000000000000000107th"),
        (10000000000000000108u64, "10000000000000000108th"),
        (10000000000000000109u64, "10000000000000000109th"),
        (10000000000000000111u64, "10000000000000000111th"),
        (10000000000000000112u64, "10000000000000000112th"),
        (10000000000000000113u64, "10000000000000000113th"),
        (10000000000000000114u64, "10000000000000000114th"),
        (10000000000000000115u64, "10000000000000000115th"),
        (10000000000000000116u64, "10000000000000000116th"),
        (10000000000000000117u64, "10000000000000000117th"),
        (10000000000000000118u64, "10000000000000000118th"),
        (10000000000000000119u64, "10000000000000000119th"),
    ] {
        assert_eq!(ordnl::of_u64(num), expected);
    }
}
